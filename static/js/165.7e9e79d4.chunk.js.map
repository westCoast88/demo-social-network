{"version":3,"file":"static/js/165.7e9e79d4.chunk.js","mappings":"wKACA,EAA0B,yBAA1B,EAAiE,6BAAjE,EAA2K,0BAA3K,EAAyN,mCAAzN,EAA0T,gCAA1T,EAAsW,2BCAtW,EAAuB,yB,6BCcvB,EAVmB,SAACA,GAChB,OACIC,EAAAA,EAAAA,MAAA,OAAKC,UAAWC,EAAYC,SAAA,EACxBC,EAAAA,EAAAA,KAAA,OAAKC,IAAKC,EAAWC,IAAI,MACzBH,EAAAA,EAAAA,KAACI,EAAAA,GAAO,CAACC,GAAI,YAAcV,EAAMW,GAAGP,SAAEJ,EAAMY,SAGxD,ECXA,EAA0B,yBCS1B,EANgB,SAACZ,GACb,OACIK,EAAAA,EAAAA,KAAA,OAAKH,UAAWC,EAAeC,SAAEJ,EAAMa,SAE/C,E,6BC8BA,EA5BgB,SAACb,GAEb,IAAIc,EAAQd,EAAMe,YAOZC,EAAkBF,EAAMG,QAAQC,KAAI,SAACC,GAAE,OAAKd,EAAAA,EAAAA,KAACe,EAAU,CAACR,KAAMO,EAAGP,KAAMD,GAAIQ,EAAGR,IAASQ,EAAGR,GAAM,IAChGU,EAAkBP,EAAMQ,SAASJ,KAAI,SAACC,GAAE,OAAKd,EAAAA,EAAAA,KAACkB,EAAO,CAACV,QAASM,EAAGN,SAAcM,EAAGR,GAAM,IAE/F,OACIV,EAAAA,EAAAA,MAAA,OAAKC,UAAWC,EAAeC,SAAA,EAC3BC,EAAAA,EAAAA,KAAA,OAAKH,UAAWC,EAAmBC,SAC9BY,KAGLf,EAAAA,EAAAA,MAAA,OAAKC,UAAWC,EAAgBC,SAAA,EAC5BC,EAAAA,EAAAA,KAAA,OAAKH,UAAWC,EAAyBC,SACpCiB,KAGLhB,EAAAA,EAAAA,KAACmB,EAAmB,CAACC,SAnBX,SAACC,GACnBC,QAAQC,IAAIF,GACZ1B,EAAM6B,YAAYH,EAAOI,eAC7B,SAoBJ,EAgBMN,GAAsBO,EAAAA,EAAAA,GAAU,CAACC,KAAM,wBAAjBD,EAbL,SAAC/B,GAEpB,IAAMiC,GAAeC,EAAAA,EAAAA,GAAiB,IACtC,OAAO7B,EAAAA,EAAAA,KAAA,OAAAD,UACHH,EAAAA,EAAAA,MAAA,QAAMkC,OAAO,GAAGV,SAAUzB,EAAMoC,aAAclC,UAAWC,EAAsBC,SAAA,EAC1EiC,EAAAA,EAAAA,GAAY,qBAAsB,iBAAkB,CAACC,EAAAA,EAAUL,GAAcM,EAAAA,EAAa,aAC3FlC,EAAAA,EAAAA,KAAA,OAAAD,UACIC,EAAAA,EAAAA,KAAA,UAAQH,UAAWC,EAAiBC,SAAC,eAIrD,I,8BC7BA,GAAeoC,E,QAAAA,KACXC,EAAAA,EAAAA,KAfkB,SAAC3B,GACnB,MAAO,CACHC,YAAaD,EAAMC,YAE3B,IAEyB,SAAC2B,GACtB,MAAO,CACHb,YAAa,SAACC,GACVY,GAASC,EAAAA,EAAAA,GAAmBb,GAChC,EAER,IAIIc,EAAAA,EAFJ,CAGEC,E,4GCrBEC,EAA6B,SAAChC,GAAK,MAAM,CACzCiC,OAAQjC,EAAMkC,KAAKD,OACtB,EAEYH,EAAmB,SAACK,GAW7B,OADqCR,EAAAA,EAAAA,IAAQK,EAARL,EARb,SAACzC,GACrB,OAAKA,EAAM+C,QAGJ1C,EAAAA,EAAAA,KAAC4C,GAASC,EAAAA,EAAAA,GAAA,GAAKlD,KAFXK,EAAAA,EAAAA,KAAC8C,EAAAA,GAAQ,CAACzC,GAAI,UAG7B,GAKJ,C","sources":["webpack://learn-react/./src/components/Dialogs/Dialogs.module.css?1b2e","webpack://learn-react/./src/components/Dialogs/DialogItem/DialogItem.module.css?beb9","components/Dialogs/DialogItem/DialogItem.jsx","webpack://learn-react/./src/components/Dialogs/Message/Message.module.css?72d0","components/Dialogs/Message/Message.jsx","components/Dialogs/Dialogs.jsx","components/Dialogs/DialogsContainer.jsx","hoc/WithAuthRedirect.js"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"dialogs\":\"Dialogs_dialogs__9Bffg\",\"dialogItems\":\"Dialogs_dialogItems__LMuTH\",\"active\":\"Dialogs_active__OBkM1\",\"dialog\":\"Dialogs_dialog__TW41R\",\"messages\":\"Dialogs_messages__HLy2+\",\"messagesContainer\":\"Dialogs_messagesContainer__FjB24\",\"inputMessage\":\"Dialogs_inputMessage__TqE28\",\"newMessageForm\":\"Dialogs_newMessageForm__2RuKg\",\"btnSubmit\":\"Dialogs_btnSubmit__OwQt0\"};","// extracted by mini-css-extract-plugin\nexport default {\"item\":\"DialogItem_item__2ZB6h\"};","import React from \"react\";\r\nimport styles from './DialogItem.module.css';\r\nimport { NavLink } from \"react-router-dom\";\r\nimport userPhoto from '../../../assets/img/userPhoto.png';\r\n\r\nconst DialogItem = (props) => {\r\n    return (\r\n        <div className={styles.item}>\r\n            <img src={userPhoto} alt=\"\" />\r\n            <NavLink to={'/dialogs/' + props.id}>{props.name}</NavLink>\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\nexport default DialogItem","// extracted by mini-css-extract-plugin\nexport default {\"message\":\"Message_message__yAOvf\"};","import React from \"react\";\r\nimport styles from './Message.module.css'\r\n\r\n\r\nconst Message = (props) => {\r\n    return (\r\n        <div className={styles.message}>{props.message}</div>\r\n    )\r\n}\r\n\r\nexport default Message","import React from \"react\";\r\nimport styles from './Dialogs.module.css'\r\nimport DialogItem from \"./DialogItem/DialogItem\";\r\nimport Message from \"./Message/Message\";\r\nimport { reduxForm } from \"redux-form\";\r\nimport { FormControl } from \"../common/FormsControls/FormControls\";\r\nimport { required, maxLengthCreator } from \"../../utils/validators/validators\";\r\nimport { createField } from \"../common/FormsControls/FormControls\";\r\n\r\n\r\nconst Dialogs = (props) => {\r\n\r\n    let state = props.dialogsPage;\r\n\r\n    const addNewMessage = (values) =>{\r\n        console.log(values)\r\n        props.sendMessage(values.newMessageBody)\r\n    }\r\n\r\n    const dialogsElements = state.dialogs.map((el) => <DialogItem name={el.name} id={el.id} key={el.id} />);\r\n    const messagesElement = state.messages.map((el) => <Message message={el.message} key={el.id} />);\r\n\r\n    return (\r\n        <div className={styles.dialogs}>\r\n            <div className={styles.dialogItems}>\r\n                {dialogsElements}\r\n            </div>\r\n\r\n            <div className={styles.messages}>\r\n                <div className={styles.messagesContainer}>\r\n                    {messagesElement}\r\n                </div>\r\n\r\n                <AddMessageFormRedux onSubmit={addNewMessage}/>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\nexport default Dialogs\r\n\r\nconst AddMessageForm = (props) => {\r\n\r\n    const maxLength50 =  maxLengthCreator(50)\r\n    return <div>\r\n        <form action=\"\" onSubmit={props.handleSubmit} className={styles.newMessageForm}>\r\n            {createField(\"Enter your message\", \"newMessageBody\", [required, maxLength50], FormControl, \"textarea\")}\r\n            <div>\r\n                <button className={styles.btnSubmit}>Send</button>\r\n            </div>\r\n        </form>\r\n    </div>\r\n}\r\n\r\nconst AddMessageFormRedux = reduxForm({form: 'dialogAddMessageForm'})(AddMessageForm)","import React from \"react\";\r\nimport Dialogs from \"./Dialogs\";\r\nimport { sendMessageCreator } from \"../../redux/dialogs-reducer\";\r\nimport { connect } from \"react-redux\";\r\nimport { WithAuthRedirect } from \"../../hoc/WithAuthRedirect\";\r\nimport { compose } from \"redux\";\r\n\r\n\r\nlet mapStateTpProps = (state) => {\r\n    return {\r\n        dialogsPage: state.dialogsPage,\r\n    }\r\n}\r\n\r\nlet mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        sendMessage: (newMessageBody) => {\r\n            dispatch(sendMessageCreator(newMessageBody));\r\n        },\r\n    }\r\n}\r\n\r\nexport default compose(\r\n    connect(mapStateTpProps, mapDispatchToProps),\r\n    WithAuthRedirect\r\n)(Dialogs)\r\n","import React from \"react\";\r\nimport { Navigate } from \"react-router-dom\";\r\nimport { connect } from \"react-redux\";\r\n\r\nlet mapStateToPropsForRedirect = (state) => ({\r\n    isAuth: state.auth.isAuth\r\n})\r\n\r\nexport const WithAuthRedirect = (Component) => {\r\n    \r\n    let RedirectComponent = (props) =>{\r\n        if (!props.isAuth) {\r\n            return <Navigate to={'/login'} />\r\n        }\r\n        return <Component {...props}/>\r\n    }\r\n\r\n    \r\n    let ConnectedAuthRedirectComponent = connect(mapStateToPropsForRedirect)(RedirectComponent)\r\n    return ConnectedAuthRedirectComponent\r\n}"],"names":["props","_jsxs","className","styles","children","_jsx","src","userPhoto","alt","NavLink","to","id","name","message","state","dialogsPage","dialogsElements","dialogs","map","el","DialogItem","messagesElement","messages","Message","AddMessageFormRedux","onSubmit","values","console","log","sendMessage","newMessageBody","reduxForm","form","maxLength50","maxLengthCreator","action","handleSubmit","createField","required","FormControl","compose","connect","dispatch","sendMessageCreator","WithAuthRedirect","Dialogs","mapStateToPropsForRedirect","isAuth","auth","Component","_objectSpread","Navigate"],"sourceRoot":""}