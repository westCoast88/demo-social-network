{"version":3,"file":"static/js/680.b3d3970b.chunk.js","mappings":"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","sources":["webpack://learn-react/./src/components/Profile/Profile.module.css?b512","webpack://learn-react/./src/components/Profile/ProfileInfo/ProfileInfo.module.css?ead2","components/Profile/ProfileInfo/ProfileStatusWithHooks.jsx","components/Profile/ProfileInfo/ProfileInfo.jsx","webpack://learn-react/./src/components/Profile/MyPosts/MyPosts.module.css?831b","webpack://learn-react/./src/components/Profile/MyPosts/Post/Post.module.css?87e6","components/Profile/MyPosts/Post/Post.jsx","components/Profile/MyPosts/MyPosts.jsx","components/Profile/MyPosts/MyPostsContainer.jsx","components/Profile/Profile.jsx","components/Profile/ProfileContainer.jsx","hoc/WithAuthRedirect.js"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"content\":\"Profile_content__Z5dRE\"};","// extracted by mini-css-extract-plugin\nexport default {\"imgShell\":\"ProfileInfo_imgShell__ERJ0d\",\"profileImg\":\"ProfileInfo_profileImg__rtGGi\",\"textContent\":\"ProfileInfo_textContent__r439u\",\"name\":\"ProfileInfo_name__SmWcp\",\"userPhoto\":\"ProfileInfo_userPhoto__7f6+V\"};","import React, { useEffect, useState } from \"react\";\r\n\r\nconst ProfileStatusWithHooks = (props) => {\r\n    let [editMode, setEditMode] = useState(false)\r\n    let [status, setStatus] = useState(props.status)\r\n\r\n    const activateEditMode = () => {\r\n        setEditMode(true)\r\n    }\r\n\r\n    const deactivateEditMode = () => {\r\n        setEditMode(false)\r\n        props.updateStatus(status)\r\n    }\r\n\r\n    const onStatusChange = (e) => {\r\n        setStatus(e.currentTarget.value)\r\n    }\r\n\r\n    useEffect( () => {\r\n        setStatus(props.status)\r\n        console.log(props)\r\n    }, [ props.status ] )\r\n\r\n    return (\r\n        <div>\r\n            {!editMode &&\r\n                <div>\r\n                    <h4 onDoubleClick={ activateEditMode }> {props.status || 'No status'} </h4>\r\n                </div>\r\n            }\r\n\r\n            {editMode &&\r\n                <div>\r\n                    <input autoFocus onBlur={ deactivateEditMode }\r\n                                    onChange={ onStatusChange } \r\n                                    value={ status }/>\r\n                </div>\r\n            }\r\n        </div>)\r\n}\r\n\r\n\r\n\r\n\r\n\r\nexport default ProfileStatusWithHooks","import React from \"react\";\r\nimport styles from './ProfileInfo.module.css';\r\nimport Preloader from '../../common/Preloader/Preloader';\r\nimport ProfileStatusWithHooks from \"./ProfileStatusWithHooks\";\r\nimport grad from '../../../assets/img/grad.png';\r\nimport userPhoto from '../../../assets/img/userPhoto.png'\r\n\r\nconst ProfileInfo = ({profile, status, updateStatus, ...props}) => {\r\nconsole.log(profile)\r\n  if(!profile){\r\n    return(\r\n      <Preloader/>\r\n    )\r\n  } else {\r\n    return (\r\n      <div>\r\n        <div className={styles.imgShell}>\r\n          <img className={styles.profileImg} alt=\"\" src={grad}></img>\r\n        </div>\r\n  \r\n        <div className={styles.textContent}>\r\n          {profile.photos.large ? <img src={profile.photos.large} className={styles.userPhoto} alt=\"\"/> : <img src={userPhoto} className={styles.userPhoto} alt=\"\"/>}\r\n          <h3 className={styles.name}>{profile.fullName}</h3>\r\n          {profile.aboutMe && <p>{profile.aboutMe}</p>}\r\n          <ProfileStatusWithHooks status={status} \r\n                                  updateStatus={updateStatus}/>\r\n        </div>\r\n      </div>\r\n    )\r\n  }\r\n  \r\n}\r\n\r\nexport default ProfileInfo","// extracted by mini-css-extract-plugin\nexport default {\"textContent\":\"MyPosts_textContent__qn-O3\",\"formContainer\":\"MyPosts_formContainer__z-13z\",\"textInputContainer\":\"MyPosts_textInputContainer__wjBO8\",\"title\":\"MyPosts_title__Tgdqz\",\"BtnSubmit\":\"MyPosts_BtnSubmit__OD6A3\"};","// extracted by mini-css-extract-plugin\nexport default {\"item\":\"Post_item__pmWQm\",\"likesBtn\":\"Post_likesBtn__uwkW0\",\"likesCount\":\"Post_likesCount__srYFl\",\"likes\":\"Post_likes__wjxsF\",\"name\":\"Post_name__6txZs\"};","import React from \"react\";\r\nimport styles from './Post.module.css';\r\nimport heart from '../../../../assets//img/heart.png';\r\nimport userPhoto from '../../../../assets/img/userPhoto.png';\r\n\r\nconst Post = (props) => {\r\n  return (\r\n    <div className={styles.item}>\r\n      <img src={userPhoto} alt=\"\" />\r\n      <div>\r\n        <div className={styles.name}>NAME</div>\r\n        <div>{props.message}</div>\r\n        <div className={styles.likes}>\r\n          <p className={styles.likesCount}>{props.likescount}</p>\r\n          <button className={styles.likesBtn}>\r\n            <img src={heart} alt=\"\" />\r\n          </button>\r\n        </div>\r\n\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Post","import React, { memo } from \"react\";\r\nimport styles from './MyPosts.module.css';\r\nimport Post from \"./Post/Post\";\r\nimport { reduxForm } from \"redux-form\";\r\nimport { required, maxLengthCreator } from \"../../../utils/validators/validators\";\r\nimport { FormControl } from \"../../common/FormsControls/FormControls\";\r\nimport { createField } from \"../../common/FormsControls/FormControls\";\r\n\r\nconst MyPosts = memo(props => {\r\n  const postsElements = props.posts.map((el) => <Post message={el.message} likescount={el.likescount} key={el.id} />)\r\n\r\n  const onAddPost = (value) => {\r\n    props.addPost(value.newPostText)\r\n  }\r\n\r\n  return (\r\n    <div className={styles.textContent}>\r\n      <div className={styles.formContainer}>\r\n        <h3 className={styles.title}>My posts</h3>\r\n        <div>\r\n          <ReduxFormContainer {...props} onSubmit={onAddPost} />\r\n        </div>\r\n      </div>\r\n      <div>\r\n        {postsElements}\r\n      </div>\r\n    </div>\r\n  )\r\n})\r\n\r\nexport default MyPosts\r\n\r\nconst maxLength10 = maxLengthCreator(10);\r\n\r\nconst AddNewPostForm = (props) => {\r\n  return <form action=\"\" onSubmit={props.handleSubmit}>\r\n    <div className={styles.textInputContainer}>\r\n      {createField(\"New post text\", 'newPostText', [required, maxLength10], FormControl, \"textarea\")}\r\n    </div>\r\n    <button className={styles.BtnSubmit} type=\"submit\">Add</button>\r\n  </form>\r\n}\r\n\r\nconst ReduxFormContainer = reduxForm({ form: 'profileSddNewPostForm' })(AddNewPostForm);","import React from \"react\";\r\nimport { addPostActionCreator } from \"../../../redux/profile-reducer\";\r\nimport MyPosts from \"./MyPosts\";\r\nimport { connect } from \"react-redux\";\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    posts: state.profilePage.posts,\r\n    newPostText: state.profilePage.newPostText,\r\n  }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    addPost: (newPostText) => {\r\n      dispatch(addPostActionCreator(newPostText));\r\n    },\r\n  }\r\n}\r\n\r\nconst MyPostsContainer = connect(mapStateToProps, mapDispatchToProps)(MyPosts)\r\n\r\nexport default MyPostsContainer","import React from \"react\";\r\nimport styles from './Profile.module.css';\r\nimport ProfileInfo from \"./ProfileInfo/ProfileInfo\";\r\nimport MyPostsContainer from './MyPosts/MyPostsContainer'\r\n\r\nconst Profile = (props) => {\r\n  \r\n  return (\r\n    <div className={styles.content}>\r\n      <ProfileInfo profile={props.profile}\r\n                    status={props.status} \r\n                    updateStatus={props.updateStatus}/>\r\n      <MyPostsContainer />\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Profile","import React from \"react\";\r\nimport Profile from \"./Profile\";\r\nimport { connect } from \"react-redux\";\r\nimport { getUserProfile, getStatus, updateStatus } from \"../../redux/profile-reducer\";\r\nimport { useParams } from 'react-router-dom';\r\nimport { WithAuthRedirect } from \"../../hoc/WithAuthRedirect\";\r\nimport { compose } from \"redux\";\r\n\r\nexport function withRouter(Children) {\r\n    return (props) => {\r\n        const match = { params: useParams() };\r\n        return <Children {...props} match={match} />\r\n    }\r\n}\r\n\r\nclass ProfileContainer extends React.Component {\r\n    componentDidMount() {\r\n        let userId = this.props.match.params.userId;\r\n        if (!userId) {\r\n            userId = this.props.autorizedUserId\r\n            if (!userId) {\r\n                this.props.history.push(\"/login\")\r\n            }\r\n        }\r\n        this.props.getUserProfile(userId)\r\n        this.props.getStatus(userId)\r\n    }\r\n\r\n    render() {\r\n\r\n        return (\r\n            <div>\r\n                <Profile {...this.props} \r\n                    profile={this.props.profile} \r\n                    status={this.props.status}\r\n                    updateStatus={this.props.updateStatus}/>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\n\r\nlet mapStateToProps = (state) => ({\r\n    profile: state.profilePage.profile,\r\n    status: state.profilePage.status,\r\n    autorizedUserId: state.auth.userId,\r\n    isAuth: state.auth.isAuth\r\n})\r\n\r\nexport default compose(\r\n    connect(mapStateToProps, { getUserProfile, getStatus, updateStatus }),\r\n    withRouter,\r\n    WithAuthRedirect\r\n)(ProfileContainer)","import React from \"react\";\r\nimport { Navigate } from \"react-router-dom\";\r\nimport { connect } from \"react-redux\";\r\n\r\nlet mapStateToPropsForRedirect = (state) => ({\r\n    isAuth: state.auth.isAuth\r\n})\r\n\r\nexport const WithAuthRedirect = (Component) => {\r\n    \r\n    let RedirectComponent = (props) =>{\r\n        if (!props.isAuth) {\r\n            return <Navigate to={'/login'} />\r\n        }\r\n        return <Component {...props}/>\r\n    }\r\n\r\n    \r\n    let ConnectedAuthRedirectComponent = connect(mapStateToPropsForRedirect)(RedirectComponent)\r\n    return ConnectedAuthRedirectComponent\r\n}"],"names":["props","_useState","useState","_useState2","_slicedToArray","editMode","setEditMode","_useState3","status","_useState4","setStatus","useEffect","console","log","_jsxs","children","_jsx","onDoubleClick","autoFocus","onBlur","updateStatus","onChange","e","currentTarget","value","_ref","profile","_objectWithoutProperties","_excluded","className","styles","alt","src","grad","photos","large","userPhoto","fullName","aboutMe","ProfileStatusWithHooks","Preloader","message","likescount","memo","postsElements","posts","map","el","Post","id","ReduxFormContainer","_objectSpread","onSubmit","addPost","newPostText","maxLength10","maxLengthCreator","reduxForm","form","action","handleSubmit","createField","required","FormControl","type","connect","state","profilePage","dispatch","addPostActionCreator","MyPosts","ProfileInfo","MyPostsContainer","withRouter","Children","match","params","useParams","ProfileContainer","_React$Component","_inherits","_super","_createSuper","_classCallCheck","apply","arguments","_createClass","key","userId","this","autorizedUserId","history","push","getUserProfile","getStatus","Profile","React","compose","auth","isAuth","WithAuthRedirect","mapStateToPropsForRedirect","Component","Navigate","to"],"sourceRoot":""}